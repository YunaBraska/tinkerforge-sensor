package berlin.yuna.tinkerforgesensor.model.builder;

import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Sensor;
import berlin.yuna.tinkerforgesensor.model.type.RollingList;
import berlin.yuna.tinkerforgesensor.model.type.ValueType;
import java.lang.Long;
import java.util.Collection;
import java.util.HashMap;
import java.util.LongSummaryStatistics;
import java.util.concurrent.CopyOnWriteArrayList;

/**
 * Autogenerated with [GeneratorValues:generate]
 */
public class Values extends CopyOnWriteArrayList<Sensor> {
    public Values() {
    }

    public Values(final Collection<? extends Sensor> collection) {
        super(collection);
    }

    public Values(final Sensor[] toCopyIn) {
        super(toCopyIn);
    }

    public HashMap<Sensor, Long> getMap(final ValueType valueType) {
        final HashMap<Sensor, Long> result = new HashMap<>();
        for (Sensor sensor : this) {
            final RollingList<Long> sensorValues = (RollingList<Long>) sensor.valueMap().get(valueType);
            if (sensorValues != null && !sensorValues.isEmpty()) {
                result.put(sensor, sensorValues.getLast());
            }
        }
        return result;
    }

    public HashMap<Sensor, Long> getMap_Min(final ValueType valueType) {
        final HashMap<Sensor, Long> result = new HashMap<>();
        for (Sensor sensor : this) {
            final RollingList<Long> sensorValues = (RollingList<Long>) sensor.valueMap().get(valueType);
            if (sensorValues != null && !sensorValues.isEmpty()) {
                result.put(sensor, sensorValues.stream().mapToLong(send -> send).summaryStatistics().getMin());
            }
        }
        return result;
    }

    public HashMap<Sensor, Long> getMap_Max(final ValueType valueType) {
        final HashMap<Sensor, Long> result = new HashMap<>();
        for (Sensor sensor : this) {
            final RollingList<Long> sensorValues = (RollingList<Long>) sensor.valueMap().get(valueType);
            if (sensorValues != null && !sensorValues.isEmpty()) {
                result.put(sensor, sensorValues.stream().mapToLong(send -> send).summaryStatistics().getMax());
            }
        }
        return result;
    }

    public HashMap<Sensor, Long> getMap_Avg(final ValueType valueType) {
        final HashMap<Sensor, Long> result = new HashMap<>();
        for (Sensor sensor : this) {
            final RollingList<Long> sensorValues = (RollingList<Long>) sensor.valueMap().get(valueType);
            if (sensorValues != null && !sensorValues.isEmpty()) {
                result.put(sensor, (long) sensorValues.stream().mapToLong(send -> send).summaryStatistics().getAverage());
            }
        }
        return result;
    }

    public HashMap<Sensor, LongSummaryStatistics> getMap_Sum(final ValueType valueType) {
        final HashMap<Sensor, LongSummaryStatistics> result = new HashMap<>();
        for (Sensor sensor : this) {
            final RollingList<Long> sensorValues = (RollingList<Long>) sensor.valueMap().get(valueType);
            if (sensorValues != null && !sensorValues.isEmpty()) {
                result.put(sensor, sensorValues.stream().mapToLong(send -> send).summaryStatistics());
            }
        }
        return result;
    }

    public Long get(final ValueType valueType, final Long fallBack) {
        final HashMap<Sensor, Long> result = getMap(valueType);
        return result.isEmpty() ? fallBack : result.values().iterator().next();
    }

    public Long get_Min(final ValueType valueType, final Long fallBack) {
        final HashMap<Sensor, Long> result = getMap_Min(valueType);
        return result.isEmpty() ? fallBack : result.values().iterator().next();
    }

    public Long get_Max(final ValueType valueType, final Long fallBack) {
        final HashMap<Sensor, Long> result = getMap_Max(valueType);
        return result.isEmpty() ? fallBack : result.values().iterator().next();
    }

    public Long get_Avg(final ValueType valueType, final Long fallBack) {
        final HashMap<Sensor, Long> result = getMap_Avg(valueType);
        return result.isEmpty() ? fallBack : result.values().iterator().next();
    }

    public LongSummaryStatistics get_Sum(final ValueType valueType,
            final LongSummaryStatistics fallBack) {
        final HashMap<Sensor, LongSummaryStatistics> result = getMap_Sum(valueType);
        return result.isEmpty() ? fallBack : result.values().iterator().next();
    }

    public Long get(final ValueType valueType) {
        return get(valueType, 0L);
    }

    public Long get_Min(final ValueType valueType) {
        return get_Min(valueType, 0L);
    }

    public Long get_Max(final ValueType valueType) {
        return get_Max(valueType, 0L);
    }

    public Long get_Avg(final ValueType valueType) {
        return get_Avg(valueType, 0L);
    }

    public LongSummaryStatistics get_Sum(final ValueType valueType) {
        return get_Sum(valueType, new LongSummaryStatistics());
    }

    public RollingList<Long> listSoundSpectrum() {
        return getList(ValueType.SOUND_SPECTRUM);
    }

    public RollingList<Long> listSoundSpectrumChunk() {
        return getList(ValueType.SOUND_SPECTRUM_CHUNK);
    }

    public RollingList<Long> getList(final ValueType valueType) {
        for (Sensor sensor : this) {
            if (sensor.valueMap().containsKey(valueType)) {
                return (RollingList<Long>) sensor.valueMap().get(valueType);
            }
        }
        return new RollingList<>(0);
    }

    public Long all() {
        return get(ValueType.ALL);
    }

    public Long all_Min() {
        return get_Min(ValueType.ALL);
    }

    public Long all_Max() {
        return get_Max(ValueType.ALL);
    }

    public Long all_Avg() {
        return get_Avg(ValueType.ALL);
    }

    public LongSummaryStatistics all_Sum() {
        return get_Sum(ValueType.ALL);
    }

    public Long dummy() {
        return get(ValueType.DUMMY);
    }

    public Long dummy_Min() {
        return get_Min(ValueType.DUMMY);
    }

    public Long dummy_Max() {
        return get_Max(ValueType.DUMMY);
    }

    public Long dummy_Avg() {
        return get_Avg(ValueType.DUMMY);
    }

    public LongSummaryStatistics dummy_Sum() {
        return get_Sum(ValueType.DUMMY);
    }

    public Long ping() {
        return get(ValueType.PING);
    }

    public Long ping_Min() {
        return get_Min(ValueType.PING);
    }

    public Long ping_Max() {
        return get_Max(ValueType.PING);
    }

    public Long ping_Avg() {
        return get_Avg(ValueType.PING);
    }

    public LongSummaryStatistics ping_Sum() {
        return get_Sum(ValueType.PING);
    }

    public Long deviceStatus() {
        return get(ValueType.DEVICE_STATUS);
    }

    public Long deviceStatus_Min() {
        return get_Min(ValueType.DEVICE_STATUS);
    }

    public Long deviceStatus_Max() {
        return get_Max(ValueType.DEVICE_STATUS);
    }

    public Long deviceStatus_Avg() {
        return get_Avg(ValueType.DEVICE_STATUS);
    }

    public LongSummaryStatistics deviceStatus_Sum() {
        return get_Sum(ValueType.DEVICE_STATUS);
    }

    public Long deviceConnected() {
        return get(ValueType.DEVICE_CONNECTED);
    }

    public Long deviceConnected_Min() {
        return get_Min(ValueType.DEVICE_CONNECTED);
    }

    public Long deviceConnected_Max() {
        return get_Max(ValueType.DEVICE_CONNECTED);
    }

    public Long deviceConnected_Avg() {
        return get_Avg(ValueType.DEVICE_CONNECTED);
    }

    public LongSummaryStatistics deviceConnected_Sum() {
        return get_Sum(ValueType.DEVICE_CONNECTED);
    }

    public Long deviceReconnected() {
        return get(ValueType.DEVICE_RECONNECTED);
    }

    public Long deviceReconnected_Min() {
        return get_Min(ValueType.DEVICE_RECONNECTED);
    }

    public Long deviceReconnected_Max() {
        return get_Max(ValueType.DEVICE_RECONNECTED);
    }

    public Long deviceReconnected_Avg() {
        return get_Avg(ValueType.DEVICE_RECONNECTED);
    }

    public LongSummaryStatistics deviceReconnected_Sum() {
        return get_Sum(ValueType.DEVICE_RECONNECTED);
    }

    public Long deviceDisconnected() {
        return get(ValueType.DEVICE_DISCONNECTED);
    }

    public Long deviceDisconnected_Min() {
        return get_Min(ValueType.DEVICE_DISCONNECTED);
    }

    public Long deviceDisconnected_Max() {
        return get_Max(ValueType.DEVICE_DISCONNECTED);
    }

    public Long deviceDisconnected_Avg() {
        return get_Avg(ValueType.DEVICE_DISCONNECTED);
    }

    public LongSummaryStatistics deviceDisconnected_Sum() {
        return get_Sum(ValueType.DEVICE_DISCONNECTED);
    }

    public Long deviceTimeout() {
        return get(ValueType.DEVICE_TIMEOUT);
    }

    public Long deviceTimeout_Min() {
        return get_Min(ValueType.DEVICE_TIMEOUT);
    }

    public Long deviceTimeout_Max() {
        return get_Max(ValueType.DEVICE_TIMEOUT);
    }

    public Long deviceTimeout_Avg() {
        return get_Avg(ValueType.DEVICE_TIMEOUT);
    }

    public LongSummaryStatistics deviceTimeout_Sum() {
        return get_Sum(ValueType.DEVICE_TIMEOUT);
    }

    public Long deviceUnknown() {
        return get(ValueType.DEVICE_UNKNOWN);
    }

    public Long deviceUnknown_Min() {
        return get_Min(ValueType.DEVICE_UNKNOWN);
    }

    public Long deviceUnknown_Max() {
        return get_Max(ValueType.DEVICE_UNKNOWN);
    }

    public Long deviceUnknown_Avg() {
        return get_Avg(ValueType.DEVICE_UNKNOWN);
    }

    public LongSummaryStatistics deviceUnknown_Sum() {
        return get_Sum(ValueType.DEVICE_UNKNOWN);
    }

    public Long emergencyShutdown() {
        return get(ValueType.EMERGENCY_SHUTDOWN);
    }

    public Long emergencyShutdown_Min() {
        return get_Min(ValueType.EMERGENCY_SHUTDOWN);
    }

    public Long emergencyShutdown_Max() {
        return get_Max(ValueType.EMERGENCY_SHUTDOWN);
    }

    public Long emergencyShutdown_Avg() {
        return get_Avg(ValueType.EMERGENCY_SHUTDOWN);
    }

    public LongSummaryStatistics emergencyShutdown_Sum() {
        return get_Sum(ValueType.EMERGENCY_SHUTDOWN);
    }

    public Long deviceSearch() {
        return get(ValueType.DEVICE_SEARCH);
    }

    public Long deviceSearch_Min() {
        return get_Min(ValueType.DEVICE_SEARCH);
    }

    public Long deviceSearch_Max() {
        return get_Max(ValueType.DEVICE_SEARCH);
    }

    public Long deviceSearch_Avg() {
        return get_Avg(ValueType.DEVICE_SEARCH);
    }

    public LongSummaryStatistics deviceSearch_Sum() {
        return get_Sum(ValueType.DEVICE_SEARCH);
    }

    public Long deviceAlreadyConnected() {
        return get(ValueType.DEVICE_ALREADY_CONNECTED);
    }

    public Long deviceAlreadyConnected_Min() {
        return get_Min(ValueType.DEVICE_ALREADY_CONNECTED);
    }

    public Long deviceAlreadyConnected_Max() {
        return get_Max(ValueType.DEVICE_ALREADY_CONNECTED);
    }

    public Long deviceAlreadyConnected_Avg() {
        return get_Avg(ValueType.DEVICE_ALREADY_CONNECTED);
    }

    public LongSummaryStatistics deviceAlreadyConnected_Sum() {
        return get_Sum(ValueType.DEVICE_ALREADY_CONNECTED);
    }

    public Long environment() {
        return get(ValueType.ENVIRONMENT);
    }

    public Long environment_Min() {
        return get_Min(ValueType.ENVIRONMENT);
    }

    public Long environment_Max() {
        return get_Max(ValueType.ENVIRONMENT);
    }

    public Long environment_Avg() {
        return get_Avg(ValueType.ENVIRONMENT);
    }

    public LongSummaryStatistics environment_Sum() {
        return get_Sum(ValueType.ENVIRONMENT);
    }

    public Long airPressure() {
        return get(ValueType.AIR_PRESSURE);
    }

    public Long airPressure_Min() {
        return get_Min(ValueType.AIR_PRESSURE);
    }

    public Long airPressure_Max() {
        return get_Max(ValueType.AIR_PRESSURE);
    }

    public Long airPressure_Avg() {
        return get_Avg(ValueType.AIR_PRESSURE);
    }

    public LongSummaryStatistics airPressure_Sum() {
        return get_Sum(ValueType.AIR_PRESSURE);
    }

    public Long iaqIndex() {
        return get(ValueType.IAQ_INDEX);
    }

    public Long iaqIndex_Min() {
        return get_Min(ValueType.IAQ_INDEX);
    }

    public Long iaqIndex_Max() {
        return get_Max(ValueType.IAQ_INDEX);
    }

    public Long iaqIndex_Avg() {
        return get_Avg(ValueType.IAQ_INDEX);
    }

    public LongSummaryStatistics iaqIndex_Sum() {
        return get_Sum(ValueType.IAQ_INDEX);
    }

    public Long humidity() {
        return get(ValueType.HUMIDITY);
    }

    public Long humidity_Min() {
        return get_Min(ValueType.HUMIDITY);
    }

    public Long humidity_Max() {
        return get_Max(ValueType.HUMIDITY);
    }

    public Long humidity_Avg() {
        return get_Avg(ValueType.HUMIDITY);
    }

    public LongSummaryStatistics humidity_Sum() {
        return get_Sum(ValueType.HUMIDITY);
    }

    public Long temperature() {
        return get(ValueType.TEMPERATURE);
    }

    public Long temperature_Min() {
        return get_Min(ValueType.TEMPERATURE);
    }

    public Long temperature_Max() {
        return get_Max(ValueType.TEMPERATURE);
    }

    public Long temperature_Avg() {
        return get_Avg(ValueType.TEMPERATURE);
    }

    public LongSummaryStatistics temperature_Sum() {
        return get_Sum(ValueType.TEMPERATURE);
    }

    public Long altitude() {
        return get(ValueType.ALTITUDE);
    }

    public Long altitude_Min() {
        return get_Min(ValueType.ALTITUDE);
    }

    public Long altitude_Max() {
        return get_Max(ValueType.ALTITUDE);
    }

    public Long altitude_Avg() {
        return get_Avg(ValueType.ALTITUDE);
    }

    public LongSummaryStatistics altitude_Sum() {
        return get_Sum(ValueType.ALTITUDE);
    }

    public Long tilt() {
        return get(ValueType.TILT);
    }

    public Long tilt_Min() {
        return get_Min(ValueType.TILT);
    }

    public Long tilt_Max() {
        return get_Max(ValueType.TILT);
    }

    public Long tilt_Avg() {
        return get_Avg(ValueType.TILT);
    }

    public LongSummaryStatistics tilt_Sum() {
        return get_Sum(ValueType.TILT);
    }

    public Long motionDetected() {
        return get(ValueType.MOTION_DETECTED);
    }

    public Long motionDetected_Min() {
        return get_Min(ValueType.MOTION_DETECTED);
    }

    public Long motionDetected_Max() {
        return get_Max(ValueType.MOTION_DETECTED);
    }

    public Long motionDetected_Avg() {
        return get_Avg(ValueType.MOTION_DETECTED);
    }

    public LongSummaryStatistics motionDetected_Sum() {
        return get_Sum(ValueType.MOTION_DETECTED);
    }

    public Long distance() {
        return get(ValueType.DISTANCE);
    }

    public Long distance_Min() {
        return get_Min(ValueType.DISTANCE);
    }

    public Long distance_Max() {
        return get_Max(ValueType.DISTANCE);
    }

    public Long distance_Avg() {
        return get_Avg(ValueType.DISTANCE);
    }

    public LongSummaryStatistics distance_Sum() {
        return get_Sum(ValueType.DISTANCE);
    }

    public Long sound() {
        return get(ValueType.SOUND);
    }

    public Long sound_Min() {
        return get_Min(ValueType.SOUND);
    }

    public Long sound_Max() {
        return get_Max(ValueType.SOUND);
    }

    public Long sound_Avg() {
        return get_Avg(ValueType.SOUND);
    }

    public LongSummaryStatistics sound_Sum() {
        return get_Sum(ValueType.SOUND);
    }

    public Long soundSpectrum() {
        return get(ValueType.SOUND_SPECTRUM);
    }

    public Long soundSpectrum_Min() {
        return get_Min(ValueType.SOUND_SPECTRUM);
    }

    public Long soundSpectrum_Max() {
        return get_Max(ValueType.SOUND_SPECTRUM);
    }

    public Long soundSpectrum_Avg() {
        return get_Avg(ValueType.SOUND_SPECTRUM);
    }

    public LongSummaryStatistics soundSpectrum_Sum() {
        return get_Sum(ValueType.SOUND_SPECTRUM);
    }

    public Long soundSpectrumChunk() {
        return get(ValueType.SOUND_SPECTRUM_CHUNK);
    }

    public Long soundSpectrumChunk_Min() {
        return get_Min(ValueType.SOUND_SPECTRUM_CHUNK);
    }

    public Long soundSpectrumChunk_Max() {
        return get_Max(ValueType.SOUND_SPECTRUM_CHUNK);
    }

    public Long soundSpectrumChunk_Avg() {
        return get_Avg(ValueType.SOUND_SPECTRUM_CHUNK);
    }

    public LongSummaryStatistics soundSpectrumChunk_Sum() {
        return get_Sum(ValueType.SOUND_SPECTRUM_CHUNK);
    }

    public Long soundSpectrumOffset() {
        return get(ValueType.SOUND_SPECTRUM_OFFSET);
    }

    public Long soundSpectrumOffset_Min() {
        return get_Min(ValueType.SOUND_SPECTRUM_OFFSET);
    }

    public Long soundSpectrumOffset_Max() {
        return get_Max(ValueType.SOUND_SPECTRUM_OFFSET);
    }

    public Long soundSpectrumOffset_Avg() {
        return get_Avg(ValueType.SOUND_SPECTRUM_OFFSET);
    }

    public LongSummaryStatistics soundSpectrumOffset_Sum() {
        return get_Sum(ValueType.SOUND_SPECTRUM_OFFSET);
    }

    public Long soundSpectrumLength() {
        return get(ValueType.SOUND_SPECTRUM_LENGTH);
    }

    public Long soundSpectrumLength_Min() {
        return get_Min(ValueType.SOUND_SPECTRUM_LENGTH);
    }

    public Long soundSpectrumLength_Max() {
        return get_Max(ValueType.SOUND_SPECTRUM_LENGTH);
    }

    public Long soundSpectrumLength_Avg() {
        return get_Avg(ValueType.SOUND_SPECTRUM_LENGTH);
    }

    public LongSummaryStatistics soundSpectrumLength_Sum() {
        return get_Sum(ValueType.SOUND_SPECTRUM_LENGTH);
    }

    public Long beepActive() {
        return get(ValueType.BEEP_ACTIVE);
    }

    public Long beepActive_Min() {
        return get_Min(ValueType.BEEP_ACTIVE);
    }

    public Long beepActive_Max() {
        return get_Max(ValueType.BEEP_ACTIVE);
    }

    public Long beepActive_Avg() {
        return get_Avg(ValueType.BEEP_ACTIVE);
    }

    public LongSummaryStatistics beepActive_Sum() {
        return get_Sum(ValueType.BEEP_ACTIVE);
    }

    public Long soundIntensity() {
        return get(ValueType.SOUND_INTENSITY);
    }

    public Long soundIntensity_Min() {
        return get_Min(ValueType.SOUND_INTENSITY);
    }

    public Long soundIntensity_Max() {
        return get_Max(ValueType.SOUND_INTENSITY);
    }

    public Long soundIntensity_Avg() {
        return get_Avg(ValueType.SOUND_INTENSITY);
    }

    public LongSummaryStatistics soundIntensity_Sum() {
        return get_Sum(ValueType.SOUND_INTENSITY);
    }

    public Long touch() {
        return get(ValueType.TOUCH);
    }

    public Long touch_Min() {
        return get_Min(ValueType.TOUCH);
    }

    public Long touch_Max() {
        return get_Max(ValueType.TOUCH);
    }

    public Long touch_Avg() {
        return get_Avg(ValueType.TOUCH);
    }

    public LongSummaryStatistics touch_Sum() {
        return get_Sum(ValueType.TOUCH);
    }

    public Long touch1() {
        return get(ValueType.TOUCH_1);
    }

    public Long touch1_Min() {
        return get_Min(ValueType.TOUCH_1);
    }

    public Long touch1_Max() {
        return get_Max(ValueType.TOUCH_1);
    }

    public Long touch1_Avg() {
        return get_Avg(ValueType.TOUCH_1);
    }

    public LongSummaryStatistics touch1_Sum() {
        return get_Sum(ValueType.TOUCH_1);
    }

    public Long touch2() {
        return get(ValueType.TOUCH_2);
    }

    public Long touch2_Min() {
        return get_Min(ValueType.TOUCH_2);
    }

    public Long touch2_Max() {
        return get_Max(ValueType.TOUCH_2);
    }

    public Long touch2_Avg() {
        return get_Avg(ValueType.TOUCH_2);
    }

    public LongSummaryStatistics touch2_Sum() {
        return get_Sum(ValueType.TOUCH_2);
    }

    public Long touch3() {
        return get(ValueType.TOUCH_3);
    }

    public Long touch3_Min() {
        return get_Min(ValueType.TOUCH_3);
    }

    public Long touch3_Max() {
        return get_Max(ValueType.TOUCH_3);
    }

    public Long touch3_Avg() {
        return get_Avg(ValueType.TOUCH_3);
    }

    public LongSummaryStatistics touch3_Sum() {
        return get_Sum(ValueType.TOUCH_3);
    }

    public Long touch4() {
        return get(ValueType.TOUCH_4);
    }

    public Long touch4_Min() {
        return get_Min(ValueType.TOUCH_4);
    }

    public Long touch4_Max() {
        return get_Max(ValueType.TOUCH_4);
    }

    public Long touch4_Avg() {
        return get_Avg(ValueType.TOUCH_4);
    }

    public LongSummaryStatistics touch4_Sum() {
        return get_Sum(ValueType.TOUCH_4);
    }

    public Long touch5() {
        return get(ValueType.TOUCH_5);
    }

    public Long touch5_Min() {
        return get_Min(ValueType.TOUCH_5);
    }

    public Long touch5_Max() {
        return get_Max(ValueType.TOUCH_5);
    }

    public Long touch5_Avg() {
        return get_Avg(ValueType.TOUCH_5);
    }

    public LongSummaryStatistics touch5_Sum() {
        return get_Sum(ValueType.TOUCH_5);
    }

    public Long touch6() {
        return get(ValueType.TOUCH_6);
    }

    public Long touch6_Min() {
        return get_Min(ValueType.TOUCH_6);
    }

    public Long touch6_Max() {
        return get_Max(ValueType.TOUCH_6);
    }

    public Long touch6_Avg() {
        return get_Avg(ValueType.TOUCH_6);
    }

    public LongSummaryStatistics touch6_Sum() {
        return get_Sum(ValueType.TOUCH_6);
    }

    public Long touch7() {
        return get(ValueType.TOUCH_7);
    }

    public Long touch7_Min() {
        return get_Min(ValueType.TOUCH_7);
    }

    public Long touch7_Max() {
        return get_Max(ValueType.TOUCH_7);
    }

    public Long touch7_Avg() {
        return get_Avg(ValueType.TOUCH_7);
    }

    public LongSummaryStatistics touch7_Sum() {
        return get_Sum(ValueType.TOUCH_7);
    }

    public Long touch8() {
        return get(ValueType.TOUCH_8);
    }

    public Long touch8_Min() {
        return get_Min(ValueType.TOUCH_8);
    }

    public Long touch8_Max() {
        return get_Max(ValueType.TOUCH_8);
    }

    public Long touch8_Avg() {
        return get_Avg(ValueType.TOUCH_8);
    }

    public LongSummaryStatistics touch8_Sum() {
        return get_Sum(ValueType.TOUCH_8);
    }

    public Long touch9() {
        return get(ValueType.TOUCH_9);
    }

    public Long touch9_Min() {
        return get_Min(ValueType.TOUCH_9);
    }

    public Long touch9_Max() {
        return get_Max(ValueType.TOUCH_9);
    }

    public Long touch9_Avg() {
        return get_Avg(ValueType.TOUCH_9);
    }

    public LongSummaryStatistics touch9_Sum() {
        return get_Sum(ValueType.TOUCH_9);
    }

    public Long touch10() {
        return get(ValueType.TOUCH_10);
    }

    public Long touch10_Min() {
        return get_Min(ValueType.TOUCH_10);
    }

    public Long touch10_Max() {
        return get_Max(ValueType.TOUCH_10);
    }

    public Long touch10_Avg() {
        return get_Avg(ValueType.TOUCH_10);
    }

    public LongSummaryStatistics touch10_Sum() {
        return get_Sum(ValueType.TOUCH_10);
    }

    public Long touch11() {
        return get(ValueType.TOUCH_11);
    }

    public Long touch11_Min() {
        return get_Min(ValueType.TOUCH_11);
    }

    public Long touch11_Max() {
        return get_Max(ValueType.TOUCH_11);
    }

    public Long touch11_Avg() {
        return get_Avg(ValueType.TOUCH_11);
    }

    public LongSummaryStatistics touch11_Sum() {
        return get_Sum(ValueType.TOUCH_11);
    }

    public Long touch12() {
        return get(ValueType.TOUCH_12);
    }

    public Long touch12_Min() {
        return get_Min(ValueType.TOUCH_12);
    }

    public Long touch12_Max() {
        return get_Max(ValueType.TOUCH_12);
    }

    public Long touch12_Avg() {
        return get_Avg(ValueType.TOUCH_12);
    }

    public LongSummaryStatistics touch12_Sum() {
        return get_Sum(ValueType.TOUCH_12);
    }

    public Long touchProximity() {
        return get(ValueType.TOUCH_PROXIMITY);
    }

    public Long touchProximity_Min() {
        return get_Min(ValueType.TOUCH_PROXIMITY);
    }

    public Long touchProximity_Max() {
        return get_Max(ValueType.TOUCH_PROXIMITY);
    }

    public Long touchProximity_Avg() {
        return get_Avg(ValueType.TOUCH_PROXIMITY);
    }

    public LongSummaryStatistics touchProximity_Sum() {
        return get_Sum(ValueType.TOUCH_PROXIMITY);
    }

    public Long light() {
        return get(ValueType.LIGHT);
    }

    public Long light_Min() {
        return get_Min(ValueType.LIGHT);
    }

    public Long light_Max() {
        return get_Max(ValueType.LIGHT);
    }

    public Long light_Avg() {
        return get_Avg(ValueType.LIGHT);
    }

    public LongSummaryStatistics light_Sum() {
        return get_Sum(ValueType.LIGHT);
    }

    public Long lightUv() {
        return get(ValueType.LIGHT_UV);
    }

    public Long lightUv_Min() {
        return get_Min(ValueType.LIGHT_UV);
    }

    public Long lightUv_Max() {
        return get_Max(ValueType.LIGHT_UV);
    }

    public Long lightUv_Avg() {
        return get_Avg(ValueType.LIGHT_UV);
    }

    public LongSummaryStatistics lightUv_Sum() {
        return get_Sum(ValueType.LIGHT_UV);
    }

    public Long lightUva() {
        return get(ValueType.LIGHT_UVA);
    }

    public Long lightUva_Min() {
        return get_Min(ValueType.LIGHT_UVA);
    }

    public Long lightUva_Max() {
        return get_Max(ValueType.LIGHT_UVA);
    }

    public Long lightUva_Avg() {
        return get_Avg(ValueType.LIGHT_UVA);
    }

    public LongSummaryStatistics lightUva_Sum() {
        return get_Sum(ValueType.LIGHT_UVA);
    }

    public Long lightUvb() {
        return get(ValueType.LIGHT_UVB);
    }

    public Long lightUvb_Min() {
        return get_Min(ValueType.LIGHT_UVB);
    }

    public Long lightUvb_Max() {
        return get_Max(ValueType.LIGHT_UVB);
    }

    public Long lightUvb_Avg() {
        return get_Avg(ValueType.LIGHT_UVB);
    }

    public LongSummaryStatistics lightUvb_Sum() {
        return get_Sum(ValueType.LIGHT_UVB);
    }

    public Long lightLux() {
        return get(ValueType.LIGHT_LUX);
    }

    public Long lightLux_Min() {
        return get_Min(ValueType.LIGHT_LUX);
    }

    public Long lightLux_Max() {
        return get_Max(ValueType.LIGHT_LUX);
    }

    public Long lightLux_Avg() {
        return get_Avg(ValueType.LIGHT_LUX);
    }

    public LongSummaryStatistics lightLux_Sum() {
        return get_Sum(ValueType.LIGHT_LUX);
    }

    public Long color() {
        return get(ValueType.COLOR);
    }

    public Long color_Min() {
        return get_Min(ValueType.COLOR);
    }

    public Long color_Max() {
        return get_Max(ValueType.COLOR);
    }

    public Long color_Avg() {
        return get_Avg(ValueType.COLOR);
    }

    public LongSummaryStatistics color_Sum() {
        return get_Sum(ValueType.COLOR);
    }

    public Long colorR() {
        return get(ValueType.COLOR_R);
    }

    public Long colorR_Min() {
        return get_Min(ValueType.COLOR_R);
    }

    public Long colorR_Max() {
        return get_Max(ValueType.COLOR_R);
    }

    public Long colorR_Avg() {
        return get_Avg(ValueType.COLOR_R);
    }

    public LongSummaryStatistics colorR_Sum() {
        return get_Sum(ValueType.COLOR_R);
    }

    public Long colorG() {
        return get(ValueType.COLOR_G);
    }

    public Long colorG_Min() {
        return get_Min(ValueType.COLOR_G);
    }

    public Long colorG_Max() {
        return get_Max(ValueType.COLOR_G);
    }

    public Long colorG_Avg() {
        return get_Avg(ValueType.COLOR_G);
    }

    public LongSummaryStatistics colorG_Sum() {
        return get_Sum(ValueType.COLOR_G);
    }

    public Long colorB() {
        return get(ValueType.COLOR_B);
    }

    public Long colorB_Min() {
        return get_Min(ValueType.COLOR_B);
    }

    public Long colorB_Max() {
        return get_Max(ValueType.COLOR_B);
    }

    public Long colorB_Avg() {
        return get_Avg(ValueType.COLOR_B);
    }

    public LongSummaryStatistics colorB_Sum() {
        return get_Sum(ValueType.COLOR_B);
    }

    public Long colorC() {
        return get(ValueType.COLOR_C);
    }

    public Long colorC_Min() {
        return get_Min(ValueType.COLOR_C);
    }

    public Long colorC_Max() {
        return get_Max(ValueType.COLOR_C);
    }

    public Long colorC_Avg() {
        return get_Avg(ValueType.COLOR_C);
    }

    public LongSummaryStatistics colorC_Sum() {
        return get_Sum(ValueType.COLOR_C);
    }

    public Long colorRgb() {
        return get(ValueType.COLOR_RGB);
    }

    public Long colorRgb_Min() {
        return get_Min(ValueType.COLOR_RGB);
    }

    public Long colorRgb_Max() {
        return get_Max(ValueType.COLOR_RGB);
    }

    public Long colorRgb_Avg() {
        return get_Avg(ValueType.COLOR_RGB);
    }

    public LongSummaryStatistics colorRgb_Sum() {
        return get_Sum(ValueType.COLOR_RGB);
    }

    public Long colorLux() {
        return get(ValueType.COLOR_LUX);
    }

    public Long colorLux_Min() {
        return get_Min(ValueType.COLOR_LUX);
    }

    public Long colorLux_Max() {
        return get_Max(ValueType.COLOR_LUX);
    }

    public Long colorLux_Avg() {
        return get_Avg(ValueType.COLOR_LUX);
    }

    public LongSummaryStatistics colorLux_Sum() {
        return get_Sum(ValueType.COLOR_LUX);
    }

    public Long colorTemperature() {
        return get(ValueType.COLOR_TEMPERATURE);
    }

    public Long colorTemperature_Min() {
        return get_Min(ValueType.COLOR_TEMPERATURE);
    }

    public Long colorTemperature_Max() {
        return get_Max(ValueType.COLOR_TEMPERATURE);
    }

    public Long colorTemperature_Avg() {
        return get_Avg(ValueType.COLOR_TEMPERATURE);
    }

    public LongSummaryStatistics colorTemperature_Sum() {
        return get_Sum(ValueType.COLOR_TEMPERATURE);
    }

    public Long imu() {
        return get(ValueType.IMU);
    }

    public Long imu_Min() {
        return get_Min(ValueType.IMU);
    }

    public Long imu_Max() {
        return get_Max(ValueType.IMU);
    }

    public Long imu_Avg() {
        return get_Avg(ValueType.IMU);
    }

    public LongSummaryStatistics imu_Sum() {
        return get_Sum(ValueType.IMU);
    }

    public Long calibration() {
        return get(ValueType.CALIBRATION);
    }

    public Long calibration_Min() {
        return get_Min(ValueType.CALIBRATION);
    }

    public Long calibration_Max() {
        return get_Max(ValueType.CALIBRATION);
    }

    public Long calibration_Avg() {
        return get_Avg(ValueType.CALIBRATION);
    }

    public LongSummaryStatistics calibration_Sum() {
        return get_Sum(ValueType.CALIBRATION);
    }

    public Long orientationHeading() {
        return get(ValueType.ORIENTATION_HEADING);
    }

    public Long orientationHeading_Min() {
        return get_Min(ValueType.ORIENTATION_HEADING);
    }

    public Long orientationHeading_Max() {
        return get_Max(ValueType.ORIENTATION_HEADING);
    }

    public Long orientationHeading_Avg() {
        return get_Avg(ValueType.ORIENTATION_HEADING);
    }

    public LongSummaryStatistics orientationHeading_Sum() {
        return get_Sum(ValueType.ORIENTATION_HEADING);
    }

    public Long orientationRoll() {
        return get(ValueType.ORIENTATION_ROLL);
    }

    public Long orientationRoll_Min() {
        return get_Min(ValueType.ORIENTATION_ROLL);
    }

    public Long orientationRoll_Max() {
        return get_Max(ValueType.ORIENTATION_ROLL);
    }

    public Long orientationRoll_Avg() {
        return get_Avg(ValueType.ORIENTATION_ROLL);
    }

    public LongSummaryStatistics orientationRoll_Sum() {
        return get_Sum(ValueType.ORIENTATION_ROLL);
    }

    public Long orientationPitch() {
        return get(ValueType.ORIENTATION_PITCH);
    }

    public Long orientationPitch_Min() {
        return get_Min(ValueType.ORIENTATION_PITCH);
    }

    public Long orientationPitch_Max() {
        return get_Max(ValueType.ORIENTATION_PITCH);
    }

    public Long orientationPitch_Avg() {
        return get_Avg(ValueType.ORIENTATION_PITCH);
    }

    public LongSummaryStatistics orientationPitch_Sum() {
        return get_Sum(ValueType.ORIENTATION_PITCH);
    }

    public Long accelerationX() {
        return get(ValueType.ACCELERATION_X);
    }

    public Long accelerationX_Min() {
        return get_Min(ValueType.ACCELERATION_X);
    }

    public Long accelerationX_Max() {
        return get_Max(ValueType.ACCELERATION_X);
    }

    public Long accelerationX_Avg() {
        return get_Avg(ValueType.ACCELERATION_X);
    }

    public LongSummaryStatistics accelerationX_Sum() {
        return get_Sum(ValueType.ACCELERATION_X);
    }

    public Long accelerationY() {
        return get(ValueType.ACCELERATION_Y);
    }

    public Long accelerationY_Min() {
        return get_Min(ValueType.ACCELERATION_Y);
    }

    public Long accelerationY_Max() {
        return get_Max(ValueType.ACCELERATION_Y);
    }

    public Long accelerationY_Avg() {
        return get_Avg(ValueType.ACCELERATION_Y);
    }

    public LongSummaryStatistics accelerationY_Sum() {
        return get_Sum(ValueType.ACCELERATION_Y);
    }

    public Long accelerationZ() {
        return get(ValueType.ACCELERATION_Z);
    }

    public Long accelerationZ_Min() {
        return get_Min(ValueType.ACCELERATION_Z);
    }

    public Long accelerationZ_Max() {
        return get_Max(ValueType.ACCELERATION_Z);
    }

    public Long accelerationZ_Avg() {
        return get_Avg(ValueType.ACCELERATION_Z);
    }

    public LongSummaryStatistics accelerationZ_Sum() {
        return get_Sum(ValueType.ACCELERATION_Z);
    }

    public Long magneticX() {
        return get(ValueType.MAGNETIC_X);
    }

    public Long magneticX_Min() {
        return get_Min(ValueType.MAGNETIC_X);
    }

    public Long magneticX_Max() {
        return get_Max(ValueType.MAGNETIC_X);
    }

    public Long magneticX_Avg() {
        return get_Avg(ValueType.MAGNETIC_X);
    }

    public LongSummaryStatistics magneticX_Sum() {
        return get_Sum(ValueType.MAGNETIC_X);
    }

    public Long magneticY() {
        return get(ValueType.MAGNETIC_Y);
    }

    public Long magneticY_Min() {
        return get_Min(ValueType.MAGNETIC_Y);
    }

    public Long magneticY_Max() {
        return get_Max(ValueType.MAGNETIC_Y);
    }

    public Long magneticY_Avg() {
        return get_Avg(ValueType.MAGNETIC_Y);
    }

    public LongSummaryStatistics magneticY_Sum() {
        return get_Sum(ValueType.MAGNETIC_Y);
    }

    public Long magneticZ() {
        return get(ValueType.MAGNETIC_Z);
    }

    public Long magneticZ_Min() {
        return get_Min(ValueType.MAGNETIC_Z);
    }

    public Long magneticZ_Max() {
        return get_Max(ValueType.MAGNETIC_Z);
    }

    public Long magneticZ_Avg() {
        return get_Avg(ValueType.MAGNETIC_Z);
    }

    public LongSummaryStatistics magneticZ_Sum() {
        return get_Sum(ValueType.MAGNETIC_Z);
    }

    public Long angularVelocityX() {
        return get(ValueType.ANGULAR_VELOCITY_X);
    }

    public Long angularVelocityX_Min() {
        return get_Min(ValueType.ANGULAR_VELOCITY_X);
    }

    public Long angularVelocityX_Max() {
        return get_Max(ValueType.ANGULAR_VELOCITY_X);
    }

    public Long angularVelocityX_Avg() {
        return get_Avg(ValueType.ANGULAR_VELOCITY_X);
    }

    public LongSummaryStatistics angularVelocityX_Sum() {
        return get_Sum(ValueType.ANGULAR_VELOCITY_X);
    }

    public Long angularVelocityY() {
        return get(ValueType.ANGULAR_VELOCITY_Y);
    }

    public Long angularVelocityY_Min() {
        return get_Min(ValueType.ANGULAR_VELOCITY_Y);
    }

    public Long angularVelocityY_Max() {
        return get_Max(ValueType.ANGULAR_VELOCITY_Y);
    }

    public Long angularVelocityY_Avg() {
        return get_Avg(ValueType.ANGULAR_VELOCITY_Y);
    }

    public LongSummaryStatistics angularVelocityY_Sum() {
        return get_Sum(ValueType.ANGULAR_VELOCITY_Y);
    }

    public Long angularVelocityZ() {
        return get(ValueType.ANGULAR_VELOCITY_Z);
    }

    public Long angularVelocityZ_Min() {
        return get_Min(ValueType.ANGULAR_VELOCITY_Z);
    }

    public Long angularVelocityZ_Max() {
        return get_Max(ValueType.ANGULAR_VELOCITY_Z);
    }

    public Long angularVelocityZ_Avg() {
        return get_Avg(ValueType.ANGULAR_VELOCITY_Z);
    }

    public LongSummaryStatistics angularVelocityZ_Sum() {
        return get_Sum(ValueType.ANGULAR_VELOCITY_Z);
    }

    public Long eulerAngleX() {
        return get(ValueType.EULER_ANGLE_X);
    }

    public Long eulerAngleX_Min() {
        return get_Min(ValueType.EULER_ANGLE_X);
    }

    public Long eulerAngleX_Max() {
        return get_Max(ValueType.EULER_ANGLE_X);
    }

    public Long eulerAngleX_Avg() {
        return get_Avg(ValueType.EULER_ANGLE_X);
    }

    public LongSummaryStatistics eulerAngleX_Sum() {
        return get_Sum(ValueType.EULER_ANGLE_X);
    }

    public Long eulerAngleY() {
        return get(ValueType.EULER_ANGLE_Y);
    }

    public Long eulerAngleY_Min() {
        return get_Min(ValueType.EULER_ANGLE_Y);
    }

    public Long eulerAngleY_Max() {
        return get_Max(ValueType.EULER_ANGLE_Y);
    }

    public Long eulerAngleY_Avg() {
        return get_Avg(ValueType.EULER_ANGLE_Y);
    }

    public LongSummaryStatistics eulerAngleY_Sum() {
        return get_Sum(ValueType.EULER_ANGLE_Y);
    }

    public Long eulerAngleZ() {
        return get(ValueType.EULER_ANGLE_Z);
    }

    public Long eulerAngleZ_Min() {
        return get_Min(ValueType.EULER_ANGLE_Z);
    }

    public Long eulerAngleZ_Max() {
        return get_Max(ValueType.EULER_ANGLE_Z);
    }

    public Long eulerAngleZ_Avg() {
        return get_Avg(ValueType.EULER_ANGLE_Z);
    }

    public LongSummaryStatistics eulerAngleZ_Sum() {
        return get_Sum(ValueType.EULER_ANGLE_Z);
    }

    public Long quaternionW() {
        return get(ValueType.QUATERNION_W);
    }

    public Long quaternionW_Min() {
        return get_Min(ValueType.QUATERNION_W);
    }

    public Long quaternionW_Max() {
        return get_Max(ValueType.QUATERNION_W);
    }

    public Long quaternionW_Avg() {
        return get_Avg(ValueType.QUATERNION_W);
    }

    public LongSummaryStatistics quaternionW_Sum() {
        return get_Sum(ValueType.QUATERNION_W);
    }

    public Long quaternionX() {
        return get(ValueType.QUATERNION_X);
    }

    public Long quaternionX_Min() {
        return get_Min(ValueType.QUATERNION_X);
    }

    public Long quaternionX_Max() {
        return get_Max(ValueType.QUATERNION_X);
    }

    public Long quaternionX_Avg() {
        return get_Avg(ValueType.QUATERNION_X);
    }

    public LongSummaryStatistics quaternionX_Sum() {
        return get_Sum(ValueType.QUATERNION_X);
    }

    public Long quaternionY() {
        return get(ValueType.QUATERNION_Y);
    }

    public Long quaternionY_Min() {
        return get_Min(ValueType.QUATERNION_Y);
    }

    public Long quaternionY_Max() {
        return get_Max(ValueType.QUATERNION_Y);
    }

    public Long quaternionY_Avg() {
        return get_Avg(ValueType.QUATERNION_Y);
    }

    public LongSummaryStatistics quaternionY_Sum() {
        return get_Sum(ValueType.QUATERNION_Y);
    }

    public Long quaternionZ() {
        return get(ValueType.QUATERNION_Z);
    }

    public Long quaternionZ_Min() {
        return get_Min(ValueType.QUATERNION_Z);
    }

    public Long quaternionZ_Max() {
        return get_Max(ValueType.QUATERNION_Z);
    }

    public Long quaternionZ_Avg() {
        return get_Avg(ValueType.QUATERNION_Z);
    }

    public LongSummaryStatistics quaternionZ_Sum() {
        return get_Sum(ValueType.QUATERNION_Z);
    }

    public Long linearAccelerationX() {
        return get(ValueType.LINEAR_ACCELERATION_X);
    }

    public Long linearAccelerationX_Min() {
        return get_Min(ValueType.LINEAR_ACCELERATION_X);
    }

    public Long linearAccelerationX_Max() {
        return get_Max(ValueType.LINEAR_ACCELERATION_X);
    }

    public Long linearAccelerationX_Avg() {
        return get_Avg(ValueType.LINEAR_ACCELERATION_X);
    }

    public LongSummaryStatistics linearAccelerationX_Sum() {
        return get_Sum(ValueType.LINEAR_ACCELERATION_X);
    }

    public Long linearAccelerationY() {
        return get(ValueType.LINEAR_ACCELERATION_Y);
    }

    public Long linearAccelerationY_Min() {
        return get_Min(ValueType.LINEAR_ACCELERATION_Y);
    }

    public Long linearAccelerationY_Max() {
        return get_Max(ValueType.LINEAR_ACCELERATION_Y);
    }

    public Long linearAccelerationY_Avg() {
        return get_Avg(ValueType.LINEAR_ACCELERATION_Y);
    }

    public LongSummaryStatistics linearAccelerationY_Sum() {
        return get_Sum(ValueType.LINEAR_ACCELERATION_Y);
    }

    public Long linearAccelerationZ() {
        return get(ValueType.LINEAR_ACCELERATION_Z);
    }

    public Long linearAccelerationZ_Min() {
        return get_Min(ValueType.LINEAR_ACCELERATION_Z);
    }

    public Long linearAccelerationZ_Max() {
        return get_Max(ValueType.LINEAR_ACCELERATION_Z);
    }

    public Long linearAccelerationZ_Avg() {
        return get_Avg(ValueType.LINEAR_ACCELERATION_Z);
    }

    public LongSummaryStatistics linearAccelerationZ_Sum() {
        return get_Sum(ValueType.LINEAR_ACCELERATION_Z);
    }

    public Long gravityVectorX() {
        return get(ValueType.GRAVITY_VECTOR_X);
    }

    public Long gravityVectorX_Min() {
        return get_Min(ValueType.GRAVITY_VECTOR_X);
    }

    public Long gravityVectorX_Max() {
        return get_Max(ValueType.GRAVITY_VECTOR_X);
    }

    public Long gravityVectorX_Avg() {
        return get_Avg(ValueType.GRAVITY_VECTOR_X);
    }

    public LongSummaryStatistics gravityVectorX_Sum() {
        return get_Sum(ValueType.GRAVITY_VECTOR_X);
    }

    public Long gravityVectorY() {
        return get(ValueType.GRAVITY_VECTOR_Y);
    }

    public Long gravityVectorY_Min() {
        return get_Min(ValueType.GRAVITY_VECTOR_Y);
    }

    public Long gravityVectorY_Max() {
        return get_Max(ValueType.GRAVITY_VECTOR_Y);
    }

    public Long gravityVectorY_Avg() {
        return get_Avg(ValueType.GRAVITY_VECTOR_Y);
    }

    public LongSummaryStatistics gravityVectorY_Sum() {
        return get_Sum(ValueType.GRAVITY_VECTOR_Y);
    }

    public Long gravityVectorZ() {
        return get(ValueType.GRAVITY_VECTOR_Z);
    }

    public Long gravityVectorZ_Min() {
        return get_Min(ValueType.GRAVITY_VECTOR_Z);
    }

    public Long gravityVectorZ_Max() {
        return get_Max(ValueType.GRAVITY_VECTOR_Z);
    }

    public Long gravityVectorZ_Avg() {
        return get_Avg(ValueType.GRAVITY_VECTOR_Z);
    }

    public LongSummaryStatistics gravityVectorZ_Sum() {
        return get_Sum(ValueType.GRAVITY_VECTOR_Z);
    }

    public Long energy() {
        return get(ValueType.ENERGY);
    }

    public Long energy_Min() {
        return get_Min(ValueType.ENERGY);
    }

    public Long energy_Max() {
        return get_Max(ValueType.ENERGY);
    }

    public Long energy_Avg() {
        return get_Avg(ValueType.ENERGY);
    }

    public LongSummaryStatistics energy_Sum() {
        return get_Sum(ValueType.ENERGY);
    }

    public Long power() {
        return get(ValueType.POWER);
    }

    public Long power_Min() {
        return get_Min(ValueType.POWER);
    }

    public Long power_Max() {
        return get_Max(ValueType.POWER);
    }

    public Long power_Avg() {
        return get_Avg(ValueType.POWER);
    }

    public LongSummaryStatistics power_Sum() {
        return get_Sum(ValueType.POWER);
    }

    public Long voltageUsb() {
        return get(ValueType.VOLTAGE_USB);
    }

    public Long voltageUsb_Min() {
        return get_Min(ValueType.VOLTAGE_USB);
    }

    public Long voltageUsb_Max() {
        return get_Max(ValueType.VOLTAGE_USB);
    }

    public Long voltageUsb_Avg() {
        return get_Avg(ValueType.VOLTAGE_USB);
    }

    public LongSummaryStatistics voltageUsb_Sum() {
        return get_Sum(ValueType.VOLTAGE_USB);
    }

    public Long voltage() {
        return get(ValueType.VOLTAGE);
    }

    public Long voltage_Min() {
        return get_Min(ValueType.VOLTAGE);
    }

    public Long voltage_Max() {
        return get_Max(ValueType.VOLTAGE);
    }

    public Long voltage_Avg() {
        return get_Avg(ValueType.VOLTAGE);
    }

    public LongSummaryStatistics voltage_Sum() {
        return get_Sum(ValueType.VOLTAGE);
    }

    public Long current() {
        return get(ValueType.CURRENT);
    }

    public Long current_Min() {
        return get_Min(ValueType.CURRENT);
    }

    public Long current_Max() {
        return get_Max(ValueType.CURRENT);
    }

    public Long current_Avg() {
        return get_Avg(ValueType.CURRENT);
    }

    public LongSummaryStatistics current_Sum() {
        return get_Sum(ValueType.CURRENT);
    }

    public Long button() {
        return get(ValueType.BUTTON);
    }

    public Long button_Min() {
        return get_Min(ValueType.BUTTON);
    }

    public Long button_Max() {
        return get_Max(ValueType.BUTTON);
    }

    public Long button_Avg() {
        return get_Avg(ValueType.BUTTON);
    }

    public LongSummaryStatistics button_Sum() {
        return get_Sum(ValueType.BUTTON);
    }

    public Long buttonPressed() {
        return get(ValueType.BUTTON_PRESSED);
    }

    public Long buttonPressed_Min() {
        return get_Min(ValueType.BUTTON_PRESSED);
    }

    public Long buttonPressed_Max() {
        return get_Max(ValueType.BUTTON_PRESSED);
    }

    public Long buttonPressed_Avg() {
        return get_Avg(ValueType.BUTTON_PRESSED);
    }

    public LongSummaryStatistics buttonPressed_Sum() {
        return get_Sum(ValueType.BUTTON_PRESSED);
    }

    public Long rotary() {
        return get(ValueType.ROTARY);
    }

    public Long rotary_Min() {
        return get_Min(ValueType.ROTARY);
    }

    public Long rotary_Max() {
        return get_Max(ValueType.ROTARY);
    }

    public Long rotary_Avg() {
        return get_Avg(ValueType.ROTARY);
    }

    public LongSummaryStatistics rotary_Sum() {
        return get_Sum(ValueType.ROTARY);
    }
}
