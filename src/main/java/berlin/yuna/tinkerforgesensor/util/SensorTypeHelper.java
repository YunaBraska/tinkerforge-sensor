package berlin.yuna.tinkerforgesensor.util;

import berlin.yuna.tinkerforgesensor.model.sensor.brick.DC;
import berlin.yuna.tinkerforgesensor.model.sensor.brick.IMU;
import berlin.yuna.tinkerforgesensor.model.sensor.brick.IMU2;
import berlin.yuna.tinkerforgesensor.model.sensor.brick.Master;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Accelerometer;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.AccelerometerV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.AirQuality;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Barometer;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.BarometerV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.ButtonRGB;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Default;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.DisplayLcd20x4;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.DisplaySegment;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.DistanceIR;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.DistanceIRV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.DistanceUS;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.DualButton;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Humidity;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.HumidityV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.IO16;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.IO16V2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.LightAmbient;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.LightAmbientV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.LightAmbientV3;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.LightColor;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.LightUv;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.LightUvV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.MotionDetector;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.MotionDetectorV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.RotaryV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Sensor;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.SoundIntensity;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Speaker;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Temperature;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.TemperatureV2;
import berlin.yuna.tinkerforgesensor.model.sensor.bricklet.Tilt;

/**
 * Autogenerated with [GeneratorSensorHelper:generate]
 * Registration of {@link com.tinkerforge.Device} and the Wrapper
 * {@link Sensor}
 */
public class SensorTypeHelper {
  public final Sensor sensor;

  public SensorTypeHelper(Sensor sensor) {
    this.sensor = sensor;
  }

  public boolean isAccelerometer() {
    return sensor.isClassType(AccelerometerV2.class) || sensor.isClassType(Accelerometer.class);
  }

  public boolean isAirQuality() {
    return sensor.isClassType(AirQuality.class);
  }

  public boolean isBarometer() {
    return sensor.isClassType(BarometerV2.class) || sensor.isClassType(Barometer.class);
  }

  public boolean isButtonRGB() {
    return sensor.isClassType(ButtonRGB.class);
  }

  public boolean isDC() {
    return sensor.isClassType(DC.class);
  }

  public boolean isDefault() {
    return sensor.isClassType(Default.class);
  }

  public boolean isDisplayLcd20x4() {
    return sensor.isClassType(DisplayLcd20x4.class);
  }

  public boolean isDisplaySegment() {
    return sensor.isClassType(DisplaySegment.class);
  }

  public boolean isDistanceIR() {
    return sensor.isClassType(DistanceIRV2.class) || sensor.isClassType(DistanceIR.class);
  }

  public boolean isDistanceUS() {
    return sensor.isClassType(DistanceUS.class);
  }

  public boolean isDualButton() {
    return sensor.isClassType(DualButton.class);
  }

  public boolean isHumidity() {
    return sensor.isClassType(HumidityV2.class) || sensor.isClassType(Humidity.class);
  }

  public boolean isIMU() {
    return sensor.isClassType(IMU2.class) || sensor.isClassType(IMU.class);
  }

  public boolean isIO16() {
    return sensor.isClassType(IO16V2.class) || sensor.isClassType(IO16.class);
  }

  public boolean isLightAmbient() {
    return sensor.isClassType(LightAmbientV3.class) || sensor.isClassType(LightAmbientV2.class) || sensor.isClassType(LightAmbient.class);
  }

  public boolean isLightColor() {
    return sensor.isClassType(LightColor.class);
  }

  public boolean isLightUv() {
    return sensor.isClassType(LightUvV2.class) || sensor.isClassType(LightUv.class);
  }

  public boolean isMaster() {
    return sensor.isClassType(Master.class);
  }

  public boolean isMotionDetector() {
    return sensor.isClassType(MotionDetectorV2.class) || sensor.isClassType(MotionDetector.class);
  }

  public boolean isRotary() {
    return sensor.isClassType(RotaryV2.class);
  }

  public boolean isSoundIntensity() {
    return sensor.isClassType(SoundIntensity.class);
  }

  public boolean isSpeaker() {
    return sensor.isClassType(Speaker.class);
  }

  public boolean isTemperature() {
    return sensor.isClassType(TemperatureV2.class) || sensor.isClassType(Temperature.class);
  }

  public boolean isTilt() {
    return sensor.isClassType(Tilt.class);
  }
}
